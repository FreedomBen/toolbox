# Ben Porter tmux conf

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# Set vi keys for copy mode
set-option -g status-keys vi
set-window-option -g mode-keys vi

# `prefix + p` pastes the latest buffer (for some reason Ctrl + ] doesn't work)
bind p paste-buffer

# `tmux prefix + Escape` or 'Ctrl-Q' starts copy mode.
bind Escape copy-mode
bind -n C-q copy-mode

# renumber windows automatically when one closes
set-option -g renumber-windows on

# Make Ctrl-a Ctrl-a switch between last selected window like screen
bind C-a run 'tmux last-window'

# Make Ctrl-a Ctrl-n and Ctrl-a Ctrl-p work
bind C-p run 'tmux previous-window'
bind C-n run 'tmux next-window'

# More straight forward key bindings for splitting
unbind C-d
unbind C-s
bind C-d split-window -h -c $HOME
bind C-s split-window -v -c $HOME

# Allow using the vim style switching commands
unbind h
unbind j
unbind k
unbind l
unbind C-h
unbind C-j
unbind C-k
unbind C-l
bind h run "tmux select-pane -L"
bind j run "tmux select-pane -D"
bind k run "tmux select-pane -U"
bind l run "tmux select-pane -R"
bind C-h run "tmux select-pane -L"
bind C-j run "tmux select-pane -D"
bind C-k run "tmux select-pane -U"
bind C-l run "tmux select-pane -R"

# Make scrollback work by tricking tmux into thinking there is no alternate screen
# supported by this terminal
set -ga terminal-overrides ',xterm*:smcup@:rmcup@'

# These will use the vim style switching commands smartly between vim splits and tmux splits
# See:  http://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"



######## The below copied from the example file included with tmux #########
#
# $Id: screen-keys.conf,v 1.7 2010-07-31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

## Bind appropriate commands similar to screen.
#lockscreen ^X x 
#unbind ^X
#bind ^X lock-server
#unbind x
#bind x lock-server
#
## screen ^C c 
#unbind ^C
#bind ^C new-window
#unbind c
#bind c new-window
#
## detach ^D d
#unbind ^D
#bind ^D detach
#
## displays * 
#unbind *
#bind * list-clients
#
## next ^@ ^N sp n 
#unbind ^@
#bind ^@ next-window
#unbind ^N
#bind ^N next-window
#unbind " "
#bind " " next-window
#unbind n
#bind n next-window
#
## title A
#unbind A
#bind A command-prompt "rename-window %%"
#
## other ^A
#unbind ^A
#bind ^A last-window
#
## prev ^H ^P p ^? 
#unbind ^H
#bind ^H previous-window
#unbind ^P
#bind ^P previous-window
#unbind p
#bind p previous-window
#unbind BSpace
#bind BSpace previous-window
#
## windows ^W w 
#unbind ^W
#bind ^W list-windows
#unbind w
#bind w list-windows
#
## quit \ 
#unbind '\'
#bind '\' confirm-before "kill-server"
#
## kill K k 
## unbind K
## bind K confirm-before "kill-window"
## unbind k
## bind k confirm-before "kill-window"
#
## redisplay ^L l 
## unbind ^L
## bind ^L refresh-client
## unbind l
## bind l refresh-client
#
## :kB: focus up
#unbind Tab
#bind Tab select-pane -t:.+
#unbind BTab
#bind BTab select-pane -t:.-
#
## " windowlist -b
#unbind '"'
#bind '"' choose-window
